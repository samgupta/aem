
service: policies


provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-2
  environment:
    POLICIES_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.POLICIES_TABLE}"
      
plugins:
  - serverless-offline
  
functions:
  createPolicy:
    handler: policies/create.create
    events:
      - http:
          path: policies
          method: post
          cors: true
  listPolicy:
    handler: policies/list.list
    events:
      - http:
          path: policies
          method: get
          cors: true

  getPolicy:
    handler: policies/get.get
    events:
      - http:
          path: policies/{policyNumber}
          method: get
          cors: true

  updatePolicy:
    handler: policies/update.update
    events:
      - http:
          path: policies/{policyNumber}
          method: put
          cors: true

  deletePolicy:
    handler: policies/delete.delete
    events:
      - http:
          path: policies/{policyNumber}
          method: delete
          cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: policyNumber
            AttributeType: S
        KeySchema:
          -
            AttributeName: policyNumber
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.POLICIES_TABLE}
